// <auto-generated />
using System;
using INWalks.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace INWalks.APIs.Migrations
{
    [DbContext(typeof(INWalksDbContext))]
    [Migration("20240803135732_SeedDataForDifficultyAndRegion")]
    partial class SeedDataForDifficultyAndRegion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("INWalks.APIs.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d91666cb-a11d-4b02-9021-30acbb4420d3"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("07e117da-4af0-4d67-a726-f1ef77c8bd30"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("137bfca4-40da-4d74-8439-0cb65d8c4a14"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("INWalks.APIs.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ede635c-0b25-4f6d-8893-2e4e44570517"),
                            Code = "BOM",
                            Name = "Bombay region"
                        },
                        new
                        {
                            Id = new Guid("bf5b41fa-2415-488c-943d-a69d1df0ff7e"),
                            Code = "PUN",
                            Name = "Pune region"
                        },
                        new
                        {
                            Id = new Guid("2d398afc-dc76-4da9-893f-dd84b243ff44"),
                            Code = "KLR",
                            Name = "Kerala region"
                        },
                        new
                        {
                            Id = new Guid("ac9d1931-9f78-4a6e-9247-9067b2d96d2f"),
                            Code = "CHN",
                            Name = "Chennai region"
                        });
                });

            modelBuilder.Entity("INWalks.APIs.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("INWalks.APIs.Models.Domain.Walk", b =>
                {
                    b.HasOne("INWalks.APIs.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("INWalks.APIs.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
